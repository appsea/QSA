"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var detailed_result_view_model_1 = require("./detailed-result-view-model");
var application = require("application");
var platform_1 = require("platform");
var application_1 = require("application");
var navigationModule = require("../navigation");
var frame_1 = require("ui/frame");
var page;
var vm;
var list;
function onPageLoaded(args) {
    if (!platform_1.isAndroid) {
        return;
    }
    application.android.on(application_1.AndroidApplication.activityBackPressedEvent, function (data) {
        navigationModule.gotoLastPage();
    });
}
exports.onPageLoaded = onPageLoaded;
function pageNavigatingTo(args) {
    page = args.object;
    list = page.getViewById("listView");
    var state = page.navigationContext;
    vm = new detailed_result_view_model_1.DetailedResultViewModel(state);
    page.bindingContext = vm;
}
exports.pageNavigatingTo = pageNavigatingTo;
function onDrawerButtonTap(args) {
    var sideDrawer = frame_1.topmost().getViewById("sideDrawer");
    sideDrawer.showDrawer();
}
exports.onDrawerButtonTap = onDrawerButtonTap;
function all() {
    vm.all();
    list.scrollToIndex(0);
}
exports.all = all;
function correct() {
    vm.correct();
    list.scrollToIndex(0);
}
exports.correct = correct;
function incorrect() {
    vm.incorrect();
    list.scrollToIndex(0);
}
exports.incorrect = incorrect;
function skipped() {
    vm.skipped();
    list.scrollToIndex(0);
}
exports.skipped = skipped;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0YWlsZWQtcmVzdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGV0YWlsZWQtcmVzdWx0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsMkVBQXFFO0FBQ3JFLHlDQUEyQztBQUMzQyxxQ0FBcUM7QUFDckMsMkNBQXNGO0FBQ3RGLGdEQUFrRDtBQUVsRCxrQ0FBbUM7QUFHbkMsSUFBSSxJQUFVLENBQUM7QUFDZixJQUFJLEVBQTJCLENBQUM7QUFDaEMsSUFBSSxJQUF1QixDQUFDO0FBRTVCLHNCQUE2QixJQUFlO0lBQ3hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsb0JBQVMsQ0FBQyxDQUFDLENBQUM7UUFDYixNQUFNLENBQUM7SUFDWCxDQUFDO0lBQ0QsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsZ0NBQWtCLENBQUMsd0JBQXdCLEVBQUUsVUFBQyxJQUF5QztRQUMxRyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFQRCxvQ0FPQztBQUVELDBCQUFpQyxJQUFtQjtJQUNoRCxJQUFJLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN6QixJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwQyxJQUFJLEtBQUssR0FBa0IsSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2xELEVBQUUsR0FBRyxJQUFJLG9EQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFORCw0Q0FNQztBQUVELDJCQUFrQyxJQUFlO0lBQzdDLElBQU0sVUFBVSxHQUFrQixlQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdEUsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQzVCLENBQUM7QUFIRCw4Q0FHQztBQUVEO0lBQ0ksRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ1QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxQixDQUFDO0FBSEQsa0JBR0M7QUFFRDtJQUNJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNiLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUIsQ0FBQztBQUhELDBCQUdDO0FBRUQ7SUFDSSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDZixJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFCLENBQUM7QUFIRCw4QkFHQztBQUVEO0lBQ0ksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxQixDQUFDO0FBSEQsMEJBR0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0V2ZW50RGF0YSwgT2JzZXJ2YWJsZX0gZnJvbSBcImRhdGEvb2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQge1N0YXRlfSBmcm9tIFwiLi4vcXVlc3Rpb25zLm1vZGVsXCI7XHJcbmltcG9ydCB7TmF2aWdhdGVkRGF0YSwgUGFnZX0gZnJvbSAndWkvcGFnZSc7XHJcbmltcG9ydCB7RGV0YWlsZWRSZXN1bHRWaWV3TW9kZWx9IGZyb20gXCIuL2RldGFpbGVkLXJlc3VsdC12aWV3LW1vZGVsXCI7XHJcbmltcG9ydCAqIGFzIGFwcGxpY2F0aW9uIGZyb20gXCJhcHBsaWNhdGlvblwiO1xyXG5pbXBvcnQgeyBpc0FuZHJvaWQgfSBmcm9tIFwicGxhdGZvcm1cIjtcclxuaW1wb3J0IHsgQW5kcm9pZEFwcGxpY2F0aW9uLCBBbmRyb2lkQWN0aXZpdHlCYWNrUHJlc3NlZEV2ZW50RGF0YSB9IGZyb20gXCJhcHBsaWNhdGlvblwiO1xyXG5pbXBvcnQgKiBhcyBuYXZpZ2F0aW9uTW9kdWxlIGZyb20gJy4uL25hdmlnYXRpb24nO1xyXG5pbXBvcnQgeyBSYWRTaWRlRHJhd2VyIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1wcm8tdWkvc2lkZWRyYXdlclwiO1xyXG5pbXBvcnQgeyB0b3Btb3N0IH0gZnJvbSBcInVpL2ZyYW1lXCI7XHJcbmltcG9ydCAqIGFzIExpc3RWaWV3IGZyb20gXCJ1aS9saXN0LXZpZXdcIjtcclxuXHJcbnZhciBwYWdlOiBQYWdlO1xyXG5sZXQgdm06IERldGFpbGVkUmVzdWx0Vmlld01vZGVsO1xyXG5sZXQgbGlzdDogTGlzdFZpZXcuTGlzdFZpZXc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb25QYWdlTG9hZGVkKGFyZ3M6IEV2ZW50RGF0YSk6IHZvaWQge1xyXG4gICAgaWYgKCFpc0FuZHJvaWQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBhcHBsaWNhdGlvbi5hbmRyb2lkLm9uKEFuZHJvaWRBcHBsaWNhdGlvbi5hY3Rpdml0eUJhY2tQcmVzc2VkRXZlbnQsIChkYXRhOiBBbmRyb2lkQWN0aXZpdHlCYWNrUHJlc3NlZEV2ZW50RGF0YSkgPT4ge1xyXG4gICAgICAgIG5hdmlnYXRpb25Nb2R1bGUuZ290b0xhc3RQYWdlKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VOYXZpZ2F0aW5nVG8oYXJnczogTmF2aWdhdGVkRGF0YSk6IHZvaWQge1xyXG4gICAgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xyXG4gICAgbGlzdCA9IHBhZ2UuZ2V0Vmlld0J5SWQoXCJsaXN0Vmlld1wiKTtcclxuICAgIGxldCBzdGF0ZTogU3RhdGUgPSA8U3RhdGU+IHBhZ2UubmF2aWdhdGlvbkNvbnRleHQ7XHJcbiAgICB2bSA9IG5ldyBEZXRhaWxlZFJlc3VsdFZpZXdNb2RlbChzdGF0ZSk7XHJcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvbkRyYXdlckJ1dHRvblRhcChhcmdzOiBFdmVudERhdGEpIHtcclxuICAgIGNvbnN0IHNpZGVEcmF3ZXIgPSA8UmFkU2lkZURyYXdlcj50b3Btb3N0KCkuZ2V0Vmlld0J5SWQoXCJzaWRlRHJhd2VyXCIpO1xyXG4gICAgc2lkZURyYXdlci5zaG93RHJhd2VyKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhbGwoKTogdm9pZCB7XHJcbiAgICB2bS5hbGwoKTtcclxuICAgIGxpc3Quc2Nyb2xsVG9JbmRleCgwKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvcnJlY3QoKTogdm9pZCB7XHJcbiAgICB2bS5jb3JyZWN0KCk7XHJcbiAgICBsaXN0LnNjcm9sbFRvSW5kZXgoMCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbmNvcnJlY3QoKTogdm9pZCB7XHJcbiAgICB2bS5pbmNvcnJlY3QoKTtcclxuICAgIGxpc3Quc2Nyb2xsVG9JbmRleCgwKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNraXBwZWQoKTogdm9pZCB7XHJcbiAgICB2bS5za2lwcGVkKCk7XHJcbiAgICBsaXN0LnNjcm9sbFRvSW5kZXgoMCk7XHJcbn0iXX0=